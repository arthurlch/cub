name: Release and Homebrew Update

on:
  push:
    tags:
      - 'v*'

jobs:
  release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.20'

      - name: Build binaries
        run: make build-all

      - name: Zip binaries
        run: |
          mkdir -p release
          cd bin
          zip -r ../release/cub-binaries-${GITHUB_REF_NAME}.zip ./*
        env:
          GITHUB_REF_NAME: ${{ github.ref_name }}

      - name: Calculate SHA256
        id: sha256
        run: |
          echo "hash=$(sha256sum release/cub-binaries-${GITHUB_REF_NAME}.zip | awk '{ print $1 }')" >> $GITHUB_ENV

      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1.1.4
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref_name }}
          release_name: Release ${{ github.ref_name }}
          body: |
            ## Release ${{ github.ref_name }}
            
            Automated release generated by GitHub Actions.
          draft: false
          prerelease: false

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./release/cub-binaries-${{ github.ref_name }}.zip
          asset_name: cub-binaries-${{ github.ref_name }}.zip
          asset_content_type: application/zip

  update-homebrew:
    needs: release
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v') && !contains(github.ref_name, 'test')

    steps:
      - name: Install GitHub CLI
        run: |
          type -p curl >/dev/null || (sudo apt update && sudo apt install curl -y)
          curl -fsSL https://cli.github.com/packages/githubcli-archive-keyring.gpg | sudo dd of=/usr/share/keyrings/githubcli-archive-keyring.gpg
          sudo chmod go+r /usr/share/keyrings/githubcli-archive-keyring.gpg
          echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/githubcli-archive-keyring.gpg] https://cli.github.com/packages stable main" | sudo tee /etc/apt/sources.list.d/github-cli.list > /dev/null
          sudo apt update
          sudo apt install gh -y

      - name: Authenticate GitHub CLI
        run: echo "${{ secrets.HOMEBREW_TAP_TOKEN }}" | gh auth login --with-token

      - name: Checkout Homebrew Tap
        uses: actions/checkout@v4
        with:
          repository: arthurlch/homebrew-cub  
          path: homebrew-tap
          token: ${{ secrets.HOMEBREW_TAP_TOKEN }}

      - name: Set up Git
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

      - name: Download Release Asset
        run: |
          curl -L -o cub-binaries.zip $(gh release view ${{ github.ref_name }} --json assets -q '.assets[0].browser_download_url')

      - name: Calculate SHA256
        id: sha256
        run: |
          echo "hash=$(sha256sum cub-binaries.zip | awk '{ print $1 }')" >> $GITHUB_ENV

      - name: Update Homebrew Cask
        run: |
          sed -i "s/version \".*\"/version \"${GITHUB_REF_NAME#v}\"/" homebrew-tap/Casks/cub.rb
          sed -i "s/sha256 \".*\"/sha256 \"${{ env.hash }}\"/" homebrew-tap/Casks/cub.rb
          sed -i "s|url \".*\"|url \"https://github.com/arthurlch/cub/releases/download/${GITHUB_REF_NAME}/cub-binaries-${GITHUB_REF_NAME}.zip\"|" homebrew-tap/Casks/cub.rb

      - name: Commit and Push Changes
        run: |
          git add Casks/cub.rb
          git commit -m "Update cub to version ${GITHUB_REF_NAME#v}"
          git push origin main

      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v7.0.5
        with:
          token: ${{ secrets.HOMEBREW_TAP_TOKEN }}
          branch: update-cub-${{ github.ref_name }} | tr '/' '-'
          title: "Update cub to version ${GITHUB_REF_NAME#v}"
          body: |
            PR updates cub to version `${GITHUB_REF_NAME#v}`.
          commit-message: "Update cub to version ${GITHUB_REF_NAME#v}"
